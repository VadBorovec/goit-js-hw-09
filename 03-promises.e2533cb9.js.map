{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLN,EACFI,EAAI,CAAEN,WAAUC,UAEhBM,EAAI,CAAEP,WAAUC,S,GAEjBA,E,IApCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAIC,iBAGJ,IAFA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEZC,EAAI,EAAGA,EAAID,EAAOE,MAAOD,IAAK,CACrC,IAAME,EAAWF,EAAI,EACfG,EAAcN,EAAMI,MAAQH,EAAKG,MAAQD,EAE/CrB,EAAcuB,EAAUC,GACrBC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAInDW,EAAIG,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// let position = 0;\n// let delayOutput = 0;\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromises);\n\nfunction onCreatePromises(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  for (let i = 0; i < amount.value; i++) {\n    const position = i + 1;\n    const delayOutput = delay.value + step.value * i;\n\n    createPromise(position, delayOutput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// !\n// Notiflix.Notify.success;\n// Notiflix.Notify.failure;\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","i","value","position1","delayOutput","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.e2533cb9.js.map"}