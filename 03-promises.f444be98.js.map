{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACLN,EACFI,EAAI,C,SAAEN,E,MAAUC,IAEhBM,EAAI,C,SAAEP,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CApCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAIC,iBACJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,SAElD,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,MAAOD,IAAK,CACrC,MAAME,EAAWF,EAAI,EACfG,EAAcR,EAAMM,MAAQL,EAAKK,MAAQD,EAE/CpB,EAAcsB,EAAUC,GACrBC,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoB5B,QAAeC,MAAU,G,CAIrDW,EAAIK,cAAcY,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// let position = 0;\n// let delayOutput = 0;\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromises);\n\nfunction onCreatePromises(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  for (let i = 0; i < amount.value; i++) {\n    const position = i + 1;\n    const delayOutput = delay.value + step.value * i;\n\n    createPromise(position, delayOutput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// !\n// Notiflix.Notify.success;\n// Notiflix.Notify.failure;\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","i","value","position1","delayOutput","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.f444be98.js.map"}