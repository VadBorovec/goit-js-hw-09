{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACLN,EACFI,EAAI,C,SAAEN,E,MAAUC,IAEhBM,EAAI,C,SAAEP,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CA7CAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAIC,iBAEJ,MAAMC,EAAQC,OAAOH,EAAII,OAAOC,SAAShB,MAAMiB,OACzCC,EAAOJ,OAAOH,EAAII,OAAOC,SAASE,KAAKD,OACvCE,EAASL,OAAOH,EAAII,OAAOC,SAASG,OAAOF,OAEjD,GAAIJ,EAAQ,GAAKK,EAAO,GAAKC,EAAS,EAEpC,YADAC,EAAAxB,GAASyB,OAAOC,QAAQ,uCAI1B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAI/BzB,EAHiByB,EAAI,EACDV,EAAQK,EAAOK,GAGhCC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOI,QACd,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOC,QACd,sBAAoBvB,QAAeC,MAAU,G,CAIrDW,EAAIgB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onCreatePromises);\n\nfunction onCreatePromises(evt) {\n  evt.preventDefault();\n\n  const delay = Number(evt.target.elements.delay.value);\n  const step = Number(evt.target.elements.step.value);\n  const amount = Number(evt.target.elements.amount.value);\n\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure('Please enter positive numbers only.');\n    return;\n  }\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delayOutput = delay + step * i;\n\n    createPromise(position, delayOutput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  evt.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","target","elements","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","success","catch","currentTarget","reset"],"version":3,"file":"03-promises.1c95abb3.js.map"}